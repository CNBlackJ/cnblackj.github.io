(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{57:function(e,r,t){"use strict";t.r(r);var a=t(0),i=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"gitlab-docker部署ci服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-docker部署ci服务器","aria-hidden":"true"}},[e._v("#")]),e._v(" Gitlab+Docker部署CI服务器")]),t("p",[e._v("持续集成（CI，Continuous integration）。持续集成是一种开发实践，通过多次集成和自动化构建来发现错误，使得代码保持高质量。这里介绍针对Ruby on Rails 项目，采用gitlab-ci进行部署的基本过程以及注意事项。")]),t("h2",{attrs:{id:"一、gitlab的ci安装与使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、gitlab的ci安装与使用","aria-hidden":"true"}},[e._v("#")]),e._v(" 一、gitlab的CI安装与使用")]),t("p",[e._v("1、安装gitlab-ci-multi-runner")]),t("p",[e._v("2、启动")]),t("p",[e._v("$ gitlab-ci-multi-runner start")]),t("p",[e._v("3、注册runner")]),t("p",[e._v("$ gitlab-cimulti-runner register")]),t("p",[e._v("按照提示输入相关的信息（跑runner的机器url、gitlab上的token以及一些其他信息）")]),t("p",[e._v("4、此时回到gitlab可以查看到注册好的runner")]),t("p",[e._v("5、配置 "),t("em",[e._v(".gitlab-ci.yml")])]),t("ul",[t("li",[t("a",{attrs:{href:"https://docs.gitlab.com/ee/ci/yaml/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方英文版")])]),t("li",[t("a",{attrs:{href:"https://www.szyhf.org/2017/01/16/gitlab-ci-yml%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E%EF%BC%88%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E7%BF%BB%E8%AF%91%EF%BC%89/",target:"_blank",rel:"noopener noreferrer"}},[e._v("中文翻译版")])])]),t("h2",{attrs:{id:"二、docker的基本操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、docker的基本操作","aria-hidden":"true"}},[e._v("#")]),e._v(" 二、Docker的基本操作")]),t("p",[e._v("Docker中有镜像（image）和容器（container）的概念。\n可以在"),t("a",{attrs:{href:"https://hub.docker.com/explore/",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里")]),e._v("找到所有基础的镜像，也就是一个系统或服务等；容器是从镜像创建的运行实例，每个容器都是相互隔离的，以此保证安全。")]),t("ul",[t("li",[e._v("tip："),t("a",{attrs:{href:"https://yeasy.gitbooks.io/docker_practice/content/",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里有一本书帮助入门")])])]),t("p",[e._v("1、运行镜像\n如果获得的镜像不能够满足正常使用，可以对docker的image进行“定制”")]),t("p",[e._v("$ docker run -t -i image:tag /bin/bash\n$ docker run -t -i ubuntu:14.04  /bin/bash")]),t("p",[e._v("运行了上述命令后直接进入到ubuntu14.04，与正常使用的系统没有太大区别，可以安装个人需要的服务或是其他，当然很多服务是可以在.gitlab-ci.yml中进行配置好的。")]),t("p",[e._v("2、镜像‘定制’好了之后需要commit，保存一个最新版本（类似git版本控制）")]),t("p",[e._v("$ docker commit -m 'description' -a 'something' image_id name:tag")]),t("p",[e._v("TODO：其他docker的基本操作")]),t("h2",{attrs:{id:"三、运行流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、运行流程","aria-hidden":"true"}},[e._v("#")]),e._v(" 三、运行流程")]),t("p",[e._v("每次push了代码之后，gitlab检测到代码的变化，自动跑runer，根据runner配置文件（.gitlab-ci.yml）进行工作，遇到失败的步骤则终止，详情可以在gitlab中的pipeline中看到。详情见图:\n"),t("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/2283607-5c1e76a5018a7e69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"ci.png"}})]),t("h2",{attrs:{id:"四、注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、注意事项","aria-hidden":"true"}},[e._v("#")]),e._v(" 四、注意事项")]),t("p",[e._v("在这里列出我遇到的主要问题：")]),t("p",[e._v("1、关于docker、gitlab和开发者机器（mac）之间的通信：三台机器之间的ssh key要相互确认好关系。\n"),t("strong",[e._v("开发机器向gitlab上push代码，docker去gitlab里fetch或者clone代码。")]),e._v("\n所以，确保gitlab上拥有二者的sshkey。（如果用capistrano，并且是采用docker方式进行deploy，则需要注意capistrano部署的目标服务器是否有docker的sshkey）。")]),t("p",[e._v("// 拷贝ssh public key\n$ ssh-copy-id user@host")]),t("p",[e._v("2、docker进入image：")]),t("p",[e._v("$ docker run -t -i ubuntu:14.04")]),t("p",[e._v("如果是要进入到交互式操作，如shell脚本，则-t -i两个参数必须使用，是用来申请一个控制台与寄主机器进行数据交互的，也就是可以在运行docker的机器上看到shell脚本输出结果。")]),t("p",[e._v("3、.git-ci.yml文件的构成：")]),t("p",[e._v("（1）该文件会指定任务让CI去执行，images指定了一份镜像，如果自己commit了一份，则命名应该要注意，因为CI会先去"),t("a",{attrs:{href:"https://hub.docker.com/explore/",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker远程仓库")]),e._v("进行查找image，如果没找到才会找本地，所以，当本地命名与远端仓库冲突时，是不会应用本地image的。")]),t("p",[e._v("（2）services: 该block下可以写一些需要使用到的服务，如：postgres、mysql、others.\n这些声明的服务会到"),t("a",{attrs:{href:"https://hub.docker.com/explore/",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker远程仓库")]),e._v("进行查找下载，并集成使用。如果使用的服务都可以找到，则不需要‘定制’image，省去很多事。")]),t("p",[e._v("（3）如果觉得在该配置文件中写了很多麻烦的任务，可以考虑‘定制’一份image。")]),t("p",[e._v("（4）自己制作好的image可以提交到docker远程仓库，供大家下载使用。")])])}],!1,null,null,null);r.default=i.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{58:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"nodejs-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" Nodejs 数据类型")]),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据类型")]),s("h4",{attrs:{id:"基本数据类型（6种）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型（6种）","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本数据类型（6种）")]),s("p",[t._v("保存在栈内存的简单数据段，访问方式为按值访问。")]),s("ul",[s("li",[t._v("String")]),s("li",[t._v("Number")]),s("li",[t._v("Boolean")]),s("li",[t._v("Null")]),s("li",[t._v("Undefined")]),s("li",[t._v("Symbol(ES6)")])]),s("p",[t._v("其中null与undefined是特殊的数据类型，"),s("code",[t._v("Null")]),t._v("表示值为空，"),s("code",[t._v("Undefined")]),t._v("表示没有定义；\nSymbol是在ES6新增加的基本数据类型。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" m "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("栈内存")]),s("th")])]),s("tbody",[s("tr",[s("td",[t._v("m")]),s("td",[t._v("1")])])])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("m "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 操作的是变量m中实际保存的值")]),t._v("\n")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("栈内存")]),s("th")])]),s("tbody",[s("tr",[s("td",[t._v("m")]),s("td",[t._v("2")])])])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" m"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 把m复制到n，栈中创建多一个新的变量n,值为m的值1")]),t._v("\n")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("栈内存")]),s("th")])]),s("tbody",[s("tr",[s("td",[t._v("m")]),s("td",[t._v("1")])]),s("tr",[s("td",[t._v("n")]),s("td",[t._v("1")])])])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("//然后把m的值2赋予n")]),t._v("\nm "),s("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nn "),s("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("栈内存")]),s("th")])]),s("tbody",[s("tr",[s("td",[t._v("m")]),s("td",[t._v("1")])]),s("tr",[s("td",[t._v("n")]),s("td",[t._v("2")])])])]),s("h3",{attrs:{id:"引用数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 引用数据类型")]),s("p",[t._v("指保存在堆内存中的对象。访问方式是按引用访问。\n也就是，变量中保存的只是一个指针，这个指针指向内存中的另一个位置，该位置保存着对象。")]),s("ul",[s("li",[t._v("Object")])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Pet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 变量保存的是一个指针，指向堆内存中保存的对象。")]),t._v("\n")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("栈内存")]),s("th"),s("th"),s("th",[t._v("堆内存")])])]),s("tbody",[s("tr",[s("td",[t._v("Pet")]),s("td",[t._v("引用指针")]),s("td",[t._v("---\x3e")]),s("td",[t._v("Object")])])])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 操作对象时，需要先从栈内存中读取堆内存地址，然后再找到保存在对内存中的值，再操作。")]),t._v("\nPet"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'dog'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("栈内存")]),s("th"),s("th"),s("th",[t._v("堆内存")])])]),s("tbody",[s("tr",[s("td",[t._v("Pet")]),s("td",[t._v("引用指针")]),s("td",[t._v("---\x3e")]),s("td",[t._v("Object{name: 'dog'}")])])])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 复制操作：复制的是栈内存中的指针，复制的指针与原指针指向同一个堆内存中保存的值。")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Animal "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Pet"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("栈内存")]),s("th"),s("th"),s("th",[t._v("堆内存")])])]),s("tbody",[s("tr",[s("td",[t._v("Pet")]),s("td",[t._v("引用指针")]),s("td",[t._v("---\x3e")]),s("td",[t._v("Object{name: 'dog'}")])]),s("tr",[s("td",[t._v("Animal")]),s("td",[t._v("引用指针")]),s("td",[t._v("___⬆")]),s("td")])])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 操作的是引用指针指向的Object")]),t._v("\nAnimal"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'red'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nPet "),s("span",{attrs:{class:"token comment"}},[t._v("// { name: 'dog', color: 'red' }")]),t._v("\nAnimal "),s("span",{attrs:{class:"token comment"}},[t._v("// { name: 'dog', color: 'red' }")]),t._v("\nAnimal "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" Pet "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("栈内存")]),s("th"),s("th"),s("th",[t._v("堆内存")])])]),s("tbody",[s("tr",[s("td",[t._v("Pet")]),s("td",[t._v("引用指针")]),s("td",[t._v("---\x3e")]),s("td",[t._v("Object{name: 'dog',color:'red'}")])]),s("tr",[s("td",[t._v("Animal")]),s("td",[t._v("引用指针")]),s("td",[t._v("___⬆")]),s("td")])])]),s("h3",{attrs:{id:"类型判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型判断","aria-hidden":"true"}},[t._v("#")]),t._v(" 类型判断")]),s("p",[t._v("Node.js里面可以用"),s("code",[t._v("==")]),t._v("和"),s("code",[t._v("===")]),t._v("来比较是否相等，二者虽然都可以比较，但是还是有很大区别的。")]),s("ul",[s("li",[s("code",[t._v("==")]),t._v(": 一般相等（类型一致化之后再进行比较）")]),s("li",[s("code",[t._v("===")]),t._v(": 严格相等（比较类型和值）")])]),s("p",[t._v("比如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("undefined "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nundefined "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),s("p",[t._v("更多详细信息："),s("a",{attrs:{href:"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Equality_comparisons_and_sameness",target:"_blank",rel:"noopener noreferrer"}},[t._v("mozilla")])])])}],!1,null,null,null);a.default=n.exports}}]);